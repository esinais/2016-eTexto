package etexto;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Igor Quadros
 */
public class FindReplace extends javax.swing.JDialog {

    eTexto librol;
    int panel;
    Highlighter.HighlightPainter MyHighlightPainter = new MyHighlightPainter(Color.yellow);

    public FindReplace(eTexto parent, int p) {
        super(parent, true);
        librol = parent;
        panel = p;
        initComponents();

        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "Cancel"); //$NON-NLS-1$
        getRootPane().getActionMap().put("Cancel", new AbstractAction() { //$NON-NLS-1$
            @Override
            public void actionPerformed(ActionEvent e) {
                close();
            }
        });
        jTabbedPane.setMnemonicAt(0, KeyEvent.VK_L);
        jTabbedPane.setMnemonicAt(1, KeyEvent.VK_S);

        if (panel == 0) {
            jTabbedPane.setSelectedIndex(0);
            if ("".equals(librol.inputTextArea.getText())) {
                inputCheckBox0.setSelected(false);
                inputCheckBox0.setEnabled(false);
            }
            if ("".equals(librol.outputTextArea.getText())) {
                outputCheckBox0.setSelected(false);
                outputCheckBox0.setEnabled(false);
            }
            findTextField0.requestFocusInWindow();
        } else {
            jTabbedPane.setSelectedIndex(1);
            findTextField1.requestFocusInWindow();
        }
    }

    public void close() {
        dispose();
    }

    public void highlight(JTextComponent textComp, String pattern) {
        try {
            Highlighter hilite = textComp.getHighlighter();
            javax.swing.text.Document doc = textComp.getDocument();
            String text = doc.getText(0, doc.getLength());
            int pos = 0;

            if (!differenceCheckBox0.isSelected()) {
                text = text.toLowerCase();
                pattern = pattern.toLowerCase();
            }

            // Search for pattern
            while ((pos = text.indexOf(pattern, pos)) >= 0) {
                // Create highlighter using private painter and apply around pattern
                hilite.addHighlight(pos, pos + pattern.length(), MyHighlightPainter);
                pos += pattern.length();
            }
        } catch (BadLocationException e) {
        }
    }

    public void removeHighlights(JTextComponent textComp) {
        Highlighter hilite = textComp.getHighlighter();
        Highlighter.Highlight[] hilites = hilite.getHighlights();
        for (int i = 0; i < hilites.length; i++) {
            if (hilites[i].getPainter() instanceof MyHighlightPainter) {
                hilite.removeHighlight(hilites[i]);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane = new javax.swing.JTabbedPane();
        findPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        findTextField0 = new javax.swing.JTextField();
        inputCheckBox0 = new javax.swing.JCheckBox();
        outputCheckBox0 = new javax.swing.JCheckBox();
        differenceCheckBox0 = new javax.swing.JCheckBox();
        lastButton0 = new javax.swing.JButton();
        nextButton0 = new javax.swing.JButton();
        cancelButton0 = new javax.swing.JButton();
        highlightAllButton = new javax.swing.JButton();
        clearHighlightButton = new javax.swing.JButton();
        replacePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        findTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        replaceTextField = new javax.swing.JTextField();
        lastButton1 = new javax.swing.JButton();
        nextButton1 = new javax.swing.JButton();
        replaceButton = new javax.swing.JButton();
        replaceAllButton = new javax.swing.JButton();
        cancelButton1 = new javax.swing.JButton();
        differenceCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Localizar e Substituir");
        setIconImage(null);
        setIconImages(null);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(225, 225, 255));

        jTabbedPane.setBackground(new java.awt.Color(225, 225, 255));
        jTabbedPane.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTabbedPane.setFocusable(false);
        jTabbedPane.setRequestFocusEnabled(false);
        jTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneStateChanged(evt);
            }
        });

        findPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Localizar:");

        inputCheckBox0.setBackground(new java.awt.Color(255, 255, 255));
        inputCheckBox0.setSelected(true);
        inputCheckBox0.setText("Localizar em Português");

        outputCheckBox0.setBackground(new java.awt.Color(255, 255, 255));
        outputCheckBox0.setSelected(true);
        outputCheckBox0.setText("Localizar em LIBRAS");

        differenceCheckBox0.setBackground(new java.awt.Color(255, 255, 255));
        differenceCheckBox0.setSelected(true);
        differenceCheckBox0.setText("Diferenciar maiúsculas de minúsculas");

        lastButton0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        lastButton0.setMnemonic('A');
        lastButton0.setText("Localizar Anterior");
        lastButton0.setBorderPainted(false);
        lastButton0.setFocusPainted(false);
        lastButton0.setFocusable(false);
        lastButton0.setRequestFocusEnabled(false);

        nextButton0.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/next.png"))); // NOI18N
        nextButton0.setMnemonic('P');
        nextButton0.setText("Localizar Próxima");
        nextButton0.setBorderPainted(false);
        nextButton0.setFocusPainted(false);
        nextButton0.setFocusable(false);
        nextButton0.setRequestFocusEnabled(false);

        cancelButton0.setMnemonic('C');
        cancelButton0.setText("Cancelar");
        cancelButton0.setBorderPainted(false);
        cancelButton0.setFocusPainted(false);
        cancelButton0.setFocusable(false);
        cancelButton0.setRequestFocusEnabled(false);
        cancelButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton0ActionPerformed(evt);
            }
        });

        highlightAllButton.setMnemonic('R');
        highlightAllButton.setText("Realçar Tudo");
        highlightAllButton.setBorderPainted(false);
        highlightAllButton.setFocusPainted(false);
        highlightAllButton.setFocusable(false);
        highlightAllButton.setRequestFocusEnabled(false);
        highlightAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highlightAllButtonActionPerformed(evt);
            }
        });

        clearHighlightButton.setMnemonic('L');
        clearHighlightButton.setText("Limpar Realce");
        clearHighlightButton.setBorderPainted(false);
        clearHighlightButton.setFocusPainted(false);
        clearHighlightButton.setFocusable(false);
        clearHighlightButton.setRequestFocusEnabled(false);
        clearHighlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearHighlightButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout findPanelLayout = new javax.swing.GroupLayout(findPanel);
        findPanel.setLayout(findPanelLayout);
        findPanelLayout.setHorizontalGroup(
            findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(findPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(findPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addComponent(lastButton0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton0)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(highlightAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearHighlightButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton0))
                    .addGroup(findPanelLayout.createSequentialGroup()
                        .addGroup(findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(differenceCheckBox0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputCheckBox0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(outputCheckBox0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(findPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(findTextField0, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        findPanelLayout.setVerticalGroup(
            findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(findPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(findTextField0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(inputCheckBox0)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(outputCheckBox0)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(differenceCheckBox0)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(findPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton0)
                    .addComponent(lastButton0)
                    .addComponent(nextButton0)
                    .addComponent(clearHighlightButton)
                    .addComponent(highlightAllButton))
                .addContainerGap())
        );

        findPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelButton0, lastButton0, nextButton0});

        jTabbedPane.addTab("Localizar", findPanel);

        replacePanel.setBackground(new java.awt.Color(255, 255, 255));
        replacePanel.setFocusable(false);
        replacePanel.setRequestFocusEnabled(false);

        jLabel2.setText("Localizar em português:");

        jLabel3.setText("Substituir por:");

        lastButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        lastButton1.setMnemonic('A');
        lastButton1.setText("Localizar Anterior");
        lastButton1.setFocusable(false);
        lastButton1.setRequestFocusEnabled(false);

        nextButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/next.png"))); // NOI18N
        nextButton1.setMnemonic('P');
        nextButton1.setText("Localizar Próxima");
        nextButton1.setFocusable(false);
        nextButton1.setRequestFocusEnabled(false);

        replaceButton.setMnemonic('S');
        replaceButton.setText("Substituir");
        replaceButton.setFocusable(false);
        replaceButton.setRequestFocusEnabled(false);

        replaceAllButton.setMnemonic('T');
        replaceAllButton.setText("Substituir Tudo");
        replaceAllButton.setFocusable(false);
        replaceAllButton.setRequestFocusEnabled(false);
        replaceAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceAllButtonActionPerformed(evt);
            }
        });

        cancelButton1.setMnemonic('C');
        cancelButton1.setText("Cancelar");
        cancelButton1.setFocusable(false);
        cancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton1ActionPerformed(evt);
            }
        });

        differenceCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        differenceCheckBox1.setSelected(true);
        differenceCheckBox1.setText("Diferenciar maiúsculas de minúsculas");

        javax.swing.GroupLayout replacePanelLayout = new javax.swing.GroupLayout(replacePanel);
        replacePanel.setLayout(replacePanelLayout);
        replacePanelLayout.setHorizontalGroup(
            replacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(replacePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(replacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(differenceCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(replacePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lastButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(replaceButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(replaceAllButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton1))
                    .addGroup(replacePanelLayout.createSequentialGroup()
                        .addGroup(replacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, replacePanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, replacePanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(replaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        replacePanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {findTextField1, replaceTextField});

        replacePanelLayout.setVerticalGroup(
            replacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(replacePanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(replacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(findTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(replacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(replaceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(differenceCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(replacePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton1)
                    .addComponent(replaceAllButton)
                    .addComponent(replaceButton)
                    .addComponent(nextButton1)
                    .addComponent(lastButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        replacePanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelButton1, nextButton1, replaceAllButton, replaceButton});

        jTabbedPane.addTab("Substituir", replacePanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton0ActionPerformed
        close();
    }//GEN-LAST:event_cancelButton0ActionPerformed

    private void cancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton1ActionPerformed
        close();
    }//GEN-LAST:event_cancelButton1ActionPerformed

    private void replaceAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceAllButtonActionPerformed
        if (!"".equals(findTextField1.getText()) && !"".equals(replaceTextField.getText())) {
            String word = findTextField1.getText();
            String newWord = replaceTextField.getText();
            String input = librol.inputTextArea.getText();

            if (!differenceCheckBox1.isSelected()) {
                word = word.toLowerCase();
                input = input.toLowerCase();
            }

            String replace = input.replace(word, newWord);
            librol.inputTextArea.setText(replace);
            removeHighlights(librol.inputTextArea);
            removeHighlights(librol.outputTextArea);
        }
    }//GEN-LAST:event_replaceAllButtonActionPerformed

    private void highlightAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highlightAllButtonActionPerformed
        removeHighlights(librol.inputTextArea);
        removeHighlights(librol.outputTextArea);

        if (!"".equals(findTextField0.getText())) {
            if (inputCheckBox0.isSelected()) {
                highlight(librol.inputTextArea, findTextField0.getText());
            }
            if (outputCheckBox0.isSelected()) {
                highlight(librol.outputTextArea, findTextField0.getText());
            }
        }
    }//GEN-LAST:event_highlightAllButtonActionPerformed

    private void clearHighlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearHighlightButtonActionPerformed
        removeHighlights(librol.inputTextArea);
        removeHighlights(librol.outputTextArea);
    }//GEN-LAST:event_clearHighlightButtonActionPerformed

    private void jTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPaneStateChanged
        //removeHighlights(librol.inputTextArea);
        //removeHighlights(librol.outputTextArea);

        if (jTabbedPane.getSelectedIndex() == 0) {
            findTextField0.setText(findTextField1.getText());
        } else {
            findTextField1.setText(findTextField0.getText());
        }

    }//GEN-LAST:event_jTabbedPaneStateChanged
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton0;
    private javax.swing.JButton cancelButton1;
    private javax.swing.JButton clearHighlightButton;
    private javax.swing.JCheckBox differenceCheckBox0;
    private javax.swing.JCheckBox differenceCheckBox1;
    private javax.swing.JPanel findPanel;
    private javax.swing.JTextField findTextField0;
    private javax.swing.JTextField findTextField1;
    private javax.swing.JButton highlightAllButton;
    private javax.swing.JCheckBox inputCheckBox0;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JButton lastButton0;
    private javax.swing.JButton lastButton1;
    private javax.swing.JButton nextButton0;
    private javax.swing.JButton nextButton1;
    private javax.swing.JCheckBox outputCheckBox0;
    private javax.swing.JButton replaceAllButton;
    private javax.swing.JButton replaceButton;
    private javax.swing.JPanel replacePanel;
    private javax.swing.JTextField replaceTextField;
    // End of variables declaration//GEN-END:variables

    class MyHighlightPainter extends DefaultHighlighter.DefaultHighlightPainter {

        public MyHighlightPainter(Color color) {
            super(color);
        }
    }
}
