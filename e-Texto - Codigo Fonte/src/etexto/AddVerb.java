package etexto;

import beans.Verbo;
import conexao.ConexaoBD;
import dao.VerboDAO;
import dao.VerboDAO.MyDefaultTableModel;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.beans.EventHandler;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import pln.PortugueseStemmer;
import util.Arquivo;

/**
 *
 * @author Pablo
 */
public class AddVerb extends javax.swing.JDialog {

    private Arquivo arquivo = Arquivo.getInstance();
    private ConexaoBD conexao = ConexaoBD.getInstance();
    private VerboDAO verboDAO = VerboDAO.getInstance();
    private String verboInfinitivoEditado;
    private String verboRadicalEditado;
    private int rowEditado;

    public enum EstadoTabela {

        Empty, Normal, Add, Edit;
    }
    private EstadoTabela tableTermState = EstadoTabela.Empty;

    /**
     * Creates new form AddVerb
     */
    public AddVerb(JFrame parent) {
        super(parent, true);
        initComponents();
        setTableModel();
        setEstadoButoes();
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(
                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "Cancel"); //$NON-NLS-1$

        getRootPane().getActionMap().put("Cancel", new AbstractAction() { //$NON-NLS-1$
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        tf_verbo.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyPressed(java.awt.event.KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                    evt.consume();
                    b_pesquisarActionPerformed(null);
                }
            }
        });
        tb_verbo.addKeyListener(new EventHandler());
        tb_verbo.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                // verboMouseClicked(-1);
            }
        });
    }

    private void setEstadoButoes() {
        if (tableTermState == EstadoTabela.Empty || tableTermState == EstadoTabela.Normal) {
            b_adicionar.setEnabled(true);
            b_abrir.setEnabled(true);
            b_pesquisar.setEnabled(true);
            b_salvar.setEnabled(false);
            b_cancelar.setEnabled(false);
            if (tableTermState == EstadoTabela.Empty) {
                b_excluir.setEnabled(false);
            } else if (tableTermState == EstadoTabela.Normal) {
                b_excluir.setEnabled(true);
            }
        } else if (tableTermState == EstadoTabela.Add || tableTermState == EstadoTabela.Edit) {
            b_adicionar.setEnabled(false);
            b_abrir.setEnabled(false);
            b_pesquisar.setEnabled(false);
            b_salvar.setEnabled(true);
            b_cancelar.setEnabled(true);
            b_excluir.setEnabled(false);
        }
        b_atualizar.setEnabled(b_excluir.isEnabled());
        l_total_verbo.setText(String.valueOf(tb_verbo.getModel().getRowCount()));
    }

    // ::Tabela - Padroniza as colunas da tabela
    private void setTableModel() {
        tb_verbo = verboDAO.carregaTabelaToGrid();
        tb_verbo.addKeyListener(new EventHandler());

        tb_verbo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tb_verbo.setFillsViewportHeight(true);
        tb_verbo.setAutoCreateRowSorter(true); // sort the register by the column.
        setColumnWidth();
        sp_verbo.setViewportView(tb_verbo);
        sp_verbo.setWheelScrollingEnabled(true);
        tb_verbo.requestFocusInWindow();
    }

    private void setColumnWidth() {
        // colCount = 3;
        tb_verbo.getColumnModel().getColumn(0).setPreferredWidth(36);
        tb_verbo.getColumnModel().getColumn(1).setPreferredWidth(370);
        tb_verbo.getColumnModel().getColumn(2).setPreferredWidth(370);
        tb_verbo.getColumnModel().getColumn(0).setCellRenderer(new CellRenderer()); // put the column data in center
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tf_arquivo = new javax.swing.JTextField();
        b_abrir = new javax.swing.JButton();
        b_adicionar_lote = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tf_verbo = new javax.swing.JTextField();
        b_pesquisar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        sp_verbo = new javax.swing.JScrollPane();
        tb_verbo = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        l_total = new javax.swing.JLabel();
        l_total_verbo = new javax.swing.JLabel();
        b_adicionar = new javax.swing.JButton();
        b_excluir = new javax.swing.JButton();
        b_salvar = new javax.swing.JButton();
        b_cancelar = new javax.swing.JButton();
        b_atualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adicionar Verbo");
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(215, 215, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBackground(new java.awt.Color(225, 225, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Adicionar Verbo em lote");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Arquivo:");

        tf_arquivo.setEditable(false);

        b_abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open_document24.png"))); // NOI18N
        b_abrir.setToolTipText("Abre arquivo txt que contém cada verbo no infinitivo em uma única linha");
        b_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_abrirActionPerformed(evt);
            }
        });

        b_adicionar_lote.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_adicionar_lote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_green3.png"))); // NOI18N
        b_adicionar_lote.setMnemonic('L');
        b_adicionar_lote.setText("   Adicionar em Lote");
        b_adicionar_lote.setToolTipText("Converte os verbos infinitivos do arquivo txt para os seus correspondentes verbos com radical e insere-os na base de dados");
        b_adicionar_lote.setEnabled(false);
        b_adicionar_lote.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        b_adicionar_lote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_adicionar_loteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_arquivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_abrir))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(b_adicionar_lote)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(b_abrir)
                    .addComponent(tf_arquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(b_adicionar_lote, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(225, 225, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Pesquisar Verbo");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Verbo:");

        b_pesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_pesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search-24x24.png"))); // NOI18N
        b_pesquisar.setMnemonic('P');
        b_pesquisar.setText("   Pesquisar");
        b_pesquisar.setToolTipText("Pesquisa por Verbo");
        b_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_pesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 188, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf_verbo))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_pesquisar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tf_verbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(b_pesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(225, 225, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        sp_verbo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));
        sp_verbo.setToolTipText("");
        sp_verbo.setWheelScrollingEnabled(false);

        tb_verbo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Português", "LIBRAS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_verbo.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tb_verbo.setEnabled(false);
        tb_verbo.setMaximumSize(new java.awt.Dimension(375, 160));
        tb_verbo.setMinimumSize(new java.awt.Dimension(375, 160));
        tb_verbo.getTableHeader().setReorderingAllowed(false);
        sp_verbo.setViewportView(tb_verbo);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Lista de Verbos");

        l_total.setText("Total:");

        l_total_verbo.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sp_verbo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(l_total)
                        .addGap(7, 7, 7)
                        .addComponent(l_total_verbo)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(l_total)
                    .addComponent(l_total_verbo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp_verbo, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addContainerGap())
        );

        b_adicionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add_blue.png"))); // NOI18N
        b_adicionar.setMnemonic('A');
        b_adicionar.setText("   Adicionar");
        b_adicionar.setToolTipText("Adicionar verbo");
        b_adicionar.setPreferredSize(new java.awt.Dimension(140, 31));
        b_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_adicionarActionPerformed(evt);
            }
        });

        b_excluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        b_excluir.setMnemonic('X');
        b_excluir.setText("   Excluir");
        b_excluir.setToolTipText("Excluir verbo selecionado");
        b_excluir.setPreferredSize(new java.awt.Dimension(140, 31));
        b_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_excluirActionPerformed(evt);
            }
        });

        b_salvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save24_h.png"))); // NOI18N
        b_salvar.setMnemonic('S');
        b_salvar.setText("   Salvar");
        b_salvar.setToolTipText("Salvar verbo");
        b_salvar.setPreferredSize(new java.awt.Dimension(140, 31));
        b_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_salvarActionPerformed(evt);
            }
        });

        b_cancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel24_h.png"))); // NOI18N
        b_cancelar.setMnemonic('C');
        b_cancelar.setText("   Cancelar");
        b_cancelar.setToolTipText("Cancelar");
        b_cancelar.setPreferredSize(new java.awt.Dimension(140, 31));
        b_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelarActionPerformed(evt);
            }
        });

        b_atualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        b_atualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit24.gif"))); // NOI18N
        b_atualizar.setMnemonic('e');
        b_atualizar.setText("   Editar");
        b_atualizar.setToolTipText("Editar verbo");
        b_atualizar.setPreferredSize(new java.awt.Dimension(140, 31));
        b_atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_atualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(b_adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(b_atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(b_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(b_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(b_adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_atualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel3, jPanel4});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void b_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_abrirActionPerformed
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        file.setFileFilter(new FileNameExtensionFilter("(.*txt)", "txt"));
        file.setDialogTitle("Selecionar Arquivo");
        file.setCurrentDirectory(new File(System.getProperty("user.dir")));
        if (file.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            tf_arquivo.setText(file.getSelectedFile().toString());
            b_adicionar_lote.setEnabled(true);
        }
    }//GEN-LAST:event_b_abrirActionPerformed

    private void b_adicionar_loteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_adicionar_loteActionPerformed
        try {
            // 1ª Etapa - Abrir o arquivo txt que contém os verbos no infinitivo (libras) e Aplicar o stemmer nos verbos (português)    
            ArrayList<Verbo> verbos = selecionaVerboArquivo(tf_arquivo.getText());
            // 2ª Etapa - Adicionar o verbo no infinitivo na tabela Libras e o verbo no radical na tabela Português
            addVerboBD(verbos);
            // 3ª Etapa - Mostrar os verbos na tabela sp_verbo
            //selecionaVerboBD("");
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, e.getMessage() + "\n\n", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, e.getMessage() + "\n\n", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        JOptionPane.showMessageDialog(this, "Inserção Concluída!!! \n\nVerificar arquivo de log: \"log_inserção_lote.txt\"", "Inserção", JOptionPane.INFORMATION_MESSAGE);
        tf_arquivo.setText("");
    }//GEN-LAST:event_b_adicionar_loteActionPerformed

    private void b_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_pesquisarActionPerformed
        selecionaVerboBD(tf_verbo.getText().trim().toLowerCase());
    }//GEN-LAST:event_b_pesquisarActionPerformed

    private void b_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_adicionarActionPerformed
        tableTermState = EstadoTabela.Add;
        setEstadoButoes();
        MyDefaultTableModel model = (MyDefaultTableModel) tb_verbo.getModel();
        model.setCellEditable(true); // Possibilita a edição das colunas 1 e 2
        Object object[] = new Object[3];
        object[0] = verboDAO.getMaxValue() + 1;
        model.insertRow(model.getRowCount(), object);

        tb_verbo.changeSelection(model.getRowCount() - 1, 1, false, false);
        tb_verbo.requestFocusInWindow();
    }//GEN-LAST:event_b_adicionarActionPerformed

    private void b_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_salvarActionPerformed
        int row = tb_verbo.getSelectedRow();
        tb_verbo.editCellAt(row, 0); // Tira a edição da célula atual a fim de pegar o valor alterado e coloca na posição 0
        if (row >= 0) {
            if (tableTermState == EstadoTabela.Add) {// Add verbo                
                if (tb_verbo.getModel().getValueAt(row, 1) == null || tb_verbo.getModel().getValueAt(row, 2) == null) {   // Verbo Infinitivo e Radical
                    JOptionPane.showMessageDialog(this, "Informe o radical e o infinitivo do verbo!", "Alerta", JOptionPane.WARNING_MESSAGE);
                } else {
                    String verboInfinitivo = tb_verbo.getModel().getValueAt(row, 1).toString(); // Verbo Infinitivo                    
                    if (verboDAO.existeVerbo(verboInfinitivo)) {
                        JOptionPane.showMessageDialog(this, "Verbo já existe na base de dados!", "Alerta", JOptionPane.WARNING_MESSAGE);
                    } else {
                        String verboRadical = "";
                        if (tb_verbo.getModel().getValueAt(row, 1) != null) {  // Verbo Radical
                            verboRadical = tb_verbo.getModel().getValueAt(row, 2).toString();
                        }
                        if (verboDAO.insere(new Verbo(verboRadical, verboInfinitivo))) {
                            if (tb_verbo.getRowCount() == 0) {
                                tableTermState = EstadoTabela.Empty;
                            } else {
                                tableTermState = EstadoTabela.Normal;
                            }
                            setEstadoButoes();
                            JOptionPane.showMessageDialog(this, "O verbo \"" + verboInfinitivo + "\" inserido com sucesso!!!", "Inserção", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
            } else if (tableTermState == EstadoTabela.Edit) { // Update verbo             
                int id = Integer.parseInt(tb_verbo.getModel().getValueAt(row, 0).toString()); // ID
                String verboInfinitivo = tb_verbo.getModel().getValueAt(row, 1).toString(); // Verbo Infinitivo
                String verboRadical = "";
                if (tb_verbo.getModel().getValueAt(row, 1) != null) {  // Verbo Radical
                    verboRadical = tb_verbo.getModel().getValueAt(row, 2).toString();
                }
                if (verboDAO.atualiza(new Verbo(id, verboRadical, verboInfinitivo))) {
                    JOptionPane.showMessageDialog(this, "O verbo foi atualizado com sucesso!", "Atualização", JOptionPane.INFORMATION_MESSAGE);
                    if (tb_verbo.getRowCount() == 0) {
                        tableTermState = EstadoTabela.Empty;
                    } else {
                        tableTermState = EstadoTabela.Normal;
                    }
                    setEstadoButoes();
                    ((MyDefaultTableModel) tb_verbo.getModel()).setCellEditable(false); // Possibilita a edição das colunas 1 e 2
                } else {
                    JOptionPane.showMessageDialog(this, "Este verbo já existe!", "Atualização", JOptionPane.WARNING_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleciona um verbo!", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_b_salvarActionPerformed

    private void b_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_excluirActionPerformed
        int row = tb_verbo.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Por favor, seleciona um verbo!", "Alerta", JOptionPane.WARNING_MESSAGE);
        } else if (tableTermState == EstadoTabela.Add || tableTermState == EstadoTabela.Edit) {// Add ou Edit
            JOptionPane.showMessageDialog(this, "Este verbo não pode ser excluído!", "Atenção", JOptionPane.ERROR_MESSAGE);
        } else { // Remove term
            int id = Integer.parseInt(tb_verbo.getModel().getValueAt(row, 0).toString()); // ID
            String verboInfinitivo = tb_verbo.getModel().getValueAt(row, 1).toString(); // Verbo Infinitivo              
            int res;
            res = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir o verbo \"" + verboInfinitivo + "\"?",
                    "Exclusão", JOptionPane.YES_NO_OPTION);
            if (res == JOptionPane.YES_OPTION) {
                if (verboDAO.exclue(id)) {
                    ((MyDefaultTableModel) tb_verbo.getModel()).removeRow(row);
                    if (tb_verbo.getRowCount() == 0) {
                        tableTermState = EstadoTabela.Empty;
                    } else {
                        tableTermState = EstadoTabela.Normal;
                        if (row == tb_verbo.getRowCount()) {
                            tb_verbo.setRowSelectionInterval(tb_verbo.getRowCount() - 1, tb_verbo.getRowCount() - 1);
                        } else {
                            tb_verbo.setRowSelectionInterval(row, row);
                        }
                        // verboMouseClicked(-1);
                    }
                    setEstadoButoes();
                }
            }
        }
    }//GEN-LAST:event_b_excluirActionPerformed

    private void b_atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_atualizarActionPerformed
        rowEditado = tb_verbo.getSelectedRow();
        if (rowEditado < 0) {
            JOptionPane.showMessageDialog(this, "Por favor, seleciona um verbo!!!", "Edição", JOptionPane.WARNING_MESSAGE);
        } else {
            verboInfinitivoEditado = tb_verbo.getModel().getValueAt(rowEditado, 1).toString(); // Verbo Infinitivo                    
            verboRadicalEditado = tb_verbo.getModel().getValueAt(rowEditado, 2).toString(); // Verbo Radical
            tableTermState = EstadoTabela.Edit;
            setEstadoButoes();
            ((MyDefaultTableModel) tb_verbo.getModel()).setCellEditable(true); // Possibilita a edição das colunas 1 e 2
            int row = tb_verbo.getSelectedRow();
            tb_verbo.editCellAt(row, 1);
            tb_verbo.requestFocusInWindow();
        }
    }//GEN-LAST:event_b_atualizarActionPerformed

    private void b_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelarActionPerformed
        MyDefaultTableModel model = (MyDefaultTableModel) tb_verbo.getModel();
        if (tableTermState == EstadoTabela.Add) {
            model.removeRow(model.getRowCount() - 1);
        } else if (tableTermState == EstadoTabela.Edit) {
            tb_verbo.getModel().setValueAt(verboInfinitivoEditado, rowEditado, 1); // coloca o valor antigo antes da edição
            tb_verbo.getModel().setValueAt(verboRadicalEditado, rowEditado, 2); // coloca o valor antigo antes da edição
        }
        model.setCellEditable(false); // Possibilita a edição das colunas 1 e 2
        tableTermState = EstadoTabela.Normal;
        setEstadoButoes();
    }//GEN-LAST:event_b_cancelarActionPerformed

    /*private void verboMouseClicked(int keyEvent) {
        int row = tb_verbo.getSelectedRow();
        if (row >= 0) {
            if (tableTermState != EstadoTabela.Add) {// Add
                if (keyEvent == KeyEvent.VK_UP) {
                    row--;
                } else if (keyEvent == KeyEvent.VK_DOWN) {
                    row++;
                }

            }
        }
    }*/
    private ArrayList selecionaVerboArquivo(String textoEntrada) throws FileNotFoundException, IOException {
        ArrayList<Verbo> verbos = new ArrayList<>();
        File filename = new File(textoEntrada);
        try ( // Faz-se a leitura do arquivo de entrada
                BufferedReader br = new BufferedReader(new FileReader(filename))) {
            String verboInfinitivo;
            PortugueseStemmer radical = new PortugueseStemmer();
            while ((verboInfinitivo = br.readLine()) != null) {
                String verboRadical = radical.stem(verboInfinitivo);
                verbos.add(new Verbo(verboRadical, verboInfinitivo));
            }
        }
        return verbos; //retorna o array com os verbos
    }

    private void addVerboBD(ArrayList<Verbo> verbosInfinitivo) {
        int total = 0; // Total inseridos com sucesso
        StringBuilder verbosInseridos = new StringBuilder();
        verbosInseridos.append("[");
        String verbosNaoInseridos = "[";
        for (int i = 0; i < verbosInfinitivo.size(); i++) {
            Verbo verbo = verbosInfinitivo.get(i);
            if (verboDAO.insere(verbo)) {
                total++;
                verbosInseridos.append(verbo.getVerboInfinitivo());
                if (i != verbosInfinitivo.size() - 1) {
                    verbosInseridos.append("-");
                }
            } else {
                verbosNaoInseridos += verbo.getVerboInfinitivo();
                if (i != verbosInfinitivo.size() - 1) {
                    verbosNaoInseridos += "-";
                }
            }
        }
        verbosNaoInseridos += "]";
        verbosInseridos.append("]");
        String saida = "Total de verbos inseridos: " + total;
        if (total > 0) {
            saida += "\nVerbos Inseridos no Banco de Dados: " + verbosInseridos.toString();
        }
        if (!verbosNaoInseridos.equals("[]")) {
            saida += "\n\nVerbos NÃO Inseridos, pois já existem no Banco de Dados: " + verbosNaoInseridos;
        }
        // Cria arquivo com texto
        arquivo.setArquivo(saida, "log_inserção_lote.txt");
    }

    private void selecionaVerboBD(String verbo) {
        tb_verbo = verboDAO.selecionaVerbo(verbo);
        tb_verbo.addKeyListener(new EventHandler());

        tb_verbo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tb_verbo.setFillsViewportHeight(true);
        tb_verbo.setAutoCreateRowSorter(true); // sort the register by the column.
        setColumnWidth();
        sp_verbo.setViewportView(tb_verbo);
        sp_verbo.setWheelScrollingEnabled(true);
        tb_verbo.requestFocusInWindow();

        if (tb_verbo.getModel().getRowCount() == 0) {
            tableTermState = EstadoTabela.Empty;
            JOptionPane.showMessageDialog(this, "Verbo inexistente!!!", "Pesquisa", JOptionPane.INFORMATION_MESSAGE);
        } else {
            tableTermState = EstadoTabela.Normal;
        }
        setEstadoButoes();
    }

    private class CellRenderer extends DefaultTableCellRenderer {

        public CellRenderer() {
            super();
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            this.setHorizontalAlignment(CENTER);

            return super.getTableCellRendererComponent(table, value, isSelected,
                    hasFocus, row, column);
        }
    }

    class EventHandler implements KeyListener {

        public EventHandler() {

        }

        @Override
        public void keyTyped(KeyEvent evt) {
        }

        @Override
        public void keyPressed(KeyEvent evt) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER
                    || (evt.getKeyCode() == KeyEvent.VK_SPACE)) {
                evt.consume();
            } else if ((evt.getKeyCode() == KeyEvent.VK_UP
                    || (evt.getKeyCode() == KeyEvent.VK_DOWN))) {
                // verboMouseClicked(evt.getKeyCode());
            } else if (evt.getKeyCode() == KeyEvent.VK_HOME) {
                tb_verbo.setRowSelectionInterval(0, 0);
                // verboMouseClicked(evt.getKeyCode());
            } else if (evt.getKeyCode() == KeyEvent.VK_END) {
                tb_verbo.setRowSelectionInterval(tb_verbo.getRowCount() - 1, tb_verbo.getRowCount() - 1);
                // verboMouseClicked(evt.getKeyCode());
            } else if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
                evt.consume();
                //b_excluirActionPerformed(null);
            } else if (evt.getKeyCode() == KeyEvent.VK_INSERT) {
                evt.consume();
                //b_adicionarActionPerformed(null);
            }
        }

        @Override
        public void keyReleased(KeyEvent evt) {

        }
    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_abrir;
    private javax.swing.JButton b_adicionar;
    private javax.swing.JButton b_adicionar_lote;
    private javax.swing.JButton b_atualizar;
    private javax.swing.JButton b_cancelar;
    private javax.swing.JButton b_excluir;
    private javax.swing.JButton b_pesquisar;
    private javax.swing.JButton b_salvar;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel l_total;
    private javax.swing.JLabel l_total_verbo;
    private javax.swing.JScrollPane sp_verbo;
    private javax.swing.JTable tb_verbo;
    private javax.swing.JTextField tf_arquivo;
    private javax.swing.JTextField tf_verbo;
    // End of variables declaration//GEN-END:variables
}
